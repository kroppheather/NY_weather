as.vector(alldata1$Year)
stn1yrs <- as.factor(alldata1$Year) %<%
<- as.vector(alldata1$Year)
stn1yrs <- as.factor(alldata1$Year)
stn1yrs <- as.vector(alldata1$Year)
stn1yrs <- as.numeric(as.vector(alldata1$Year))
stn1yrs <- as.factor(alldata1$Year)
st1yrs
stn1yrs
stn1yrs <- unique(alldata1$Year)
stn1yrs <- unique(alldata1$Year)
stn1yrs
stn1yrs[3]
length(stn1yrs)
for (i in 1:length(stn1years)){
current_year = alldata1$Year[i]
}
for (i in 1:length(stn1yrs)){
current_year = alldata1$Year[i]
}
for (i in 1:length(stn1yrs)){
current_year = stn1yrs[i]
}
stn1yrs[5]
current_year = as.numberic(stn1yrs[i])
current_year = as.numeric(stn1yrs[i])
i
for (i in 1:length(stn1yrs)){
i
current_year = as.numeric(stn1yrs[i])
}
stn1yrs <- unique(alldata1$Year)
stn1yrs <- as.vector(stn1yrs)
for (i in 1:length(stn1yrs)){
current_year = as.numeric(stn1yrs[i])
}
for (i in 1:length(stn1yrs)){
current_year = (stn1yrs[i])
stn1yrs <- unique(alldata1$Year)
stn1yrs <- as.vector(stn1yrs)
for (i in 1:length(stn1yrs)){
current_year = (stn1yrs[i])
}
plot(alldata1$DOY[alldata1$Year == stn1yrs[1]], alldata1$TDD[alldata1$Year == "1950"],
type = "l",
col = alpha("black", 0.5),
xlab = "DOY",
ylab = "Degrees (C)",
main = "Thawing Degree Days Accumulation Boonville, NY")
stn1yrs <- unique(alldata1$Year)
stn1yrs <- unique(alldata1$Year)
stn1yrs <- as.vector(stn1yrs)
plot(alldata1$DOY[alldata1$Year == stn1yrs[1]], alldata1$TDD[alldata1$Year == "1950"],
type = "l",
col = alpha("black", 0.5),
xlab = "DOY",
ylab = "Degrees (C)",
main = "Thawing Degree Days Accumulation Boonville, NY")
plot(alldata1$DOY[alldata1$Year == "1950"], alldata1$TDD[alldata1$Year == "1950"],
type = "l",
col = alpha("black", 0.5),
xlab = "DOY",
ylab = "Degrees (C)",
main = "Thawing Degree Days Accumulation Boonville, NY")
plot(alldata1$DOY[alldata1$Year == "1950"], alldata1$TDD[alldata1$Year == "1950"],
type = "l",
col = alpha("black", 0.5),
xlab = "DOY",
ylab = "Degrees (C)",
main = "Thawing Degree Days Accumulation Boonville, NY")
# Plots of day of last freeze
# station 1
plot(LastFreeze$Year[LastFreeze$StationID == "USC00300785"], LastFreeze$LastFreeze[LastFreeze$StationID == "USC00300785"],
type = "o",
pch = 20,
xlab = "Year",
ylab = "DOY of Last Freeze",
main = "Day of Year of Last Freeze in Boonville, NY")
# station 11
plot(alldata11$Year, alldata11$TDD,
type = "h",
xlab = "Year",
ylab = "Degrees (C)",
main = "Annual Thawing Degree Day Accumulation (Jan - June) Massena, NY")
### Set up directories   -----
# Creating user numbers for each person
Users = c(1, # Abby
2, # Professor Kropp
3) # Rachel
# Creating a directory with all of our file paths
diru = c("/Users/abby/Documents/NYweather",
"/Users/hkropp/Google Drive/research/students/NYweather/data",
"/Volumes/GoogleDrive/.shortcut-targets-by-id/10ARTNFd7_vF4j5cC_nYlyqrsTjmLzCsj/NYweather/data")
# Choosing the user number - CHANGE THIS VALUE
usernumber = 3
### Read in data   -----
#csv with weather data
# Reading in prcp data from google drive
PrcpData <- read.csv(paste0(diru[usernumber], "/prcp_all.csv"), na.strings=c(""," ","NA"))
# Reading in tmax data from google drive
TmaxData <- read.csv(paste0(diru[usernumber], "/Tmax_all.csv"), na.strings=c(""," ","NA"))
# Reading in tmin data from google drive
TminData <- read.csv(paste0(diru[usernumber],"/Tmin_all.csv"), na.strings=c(""," ","NA"))
# Read in station info data
StationInfo <- read.csv(paste0(diru[usernumber],"/station_info.csv"), na.strings=c(""," ","NA"))
#NY spatial data
ez <- readOGR(paste0(diru[usernumber],"/ecozone/dfw_ecozone.shp"))
### Organize weather data  -----
# Omitting na values from the data sets
PrcpData <- PrcpData %>% drop_na(prcp)
TmaxData <- TmaxData %>% drop_na(tmax)
TminData <- TminData %>% drop_na(tmin)
# Keeping only rows without a quality flag
PrcpData <- subset(PrcpData, is.na(PrcpData$qflag))
TmaxData <- subset(TmaxData, is.na(TmaxData$qflag))
TminData <- subset(TminData, is.na(TminData$qflag))
# Formatting date columns as dates
PrcpData$date <- as.Date(PrcpData$date, "%Y-%m-%d")
TmaxData$date <- as.Date(TmaxData$date, "%Y-%m-%d")
TminData$date <- as.Date(TminData$date, "%Y-%m-%d")
# Adding a year column to each data set
PrcpData$year <- year(PrcpData$date)
TmaxData$year <- year(TmaxData$date)
TminData$year <- year(TminData$date)
# Making a day of year column
PrcpData$DOY <- yday(PrcpData$date)
TmaxData$DOY <- yday(TmaxData$date)
TminData$DOY <- yday(TminData$date)
# Subsetting data to only include first half of the year
PrcpData <- subset(PrcpData, PrcpData$DOY < 182)
TmaxData <- subset(TmaxData, TmaxData$DOY < 182)
TminData <- subset(TminData, TminData$DOY < 182)
# Converting temperature data to degrees Celsius
TmaxData$tmax <- TmaxData$tmax/10
TminData$tmin <- TminData$tmin/10
# Converting precipitation data to millimeters
PrcpData$prcp <- PrcpData$prcp/10
### Narrow down to good stations ----
# Counting observations per year for the tmax data
# Make new data frame with just the id, tmax value, and year
TmaxDataYear <- aggregate(TmaxData$tmax, by=list(TmaxData$id,TmaxData$year), FUN="length")
# Changing column names
colnames(TmaxDataYear) <- c("station", "year", "ncount")
# Getting rid of rows with less than 171 observations
TmaxDataYear <- subset(TmaxDataYear, TmaxDataYear$ncount >= 171)
# Counting observations per year for the tmin data
# Make new data frame with just the id, tmin value, and year
TminDataYear <- aggregate(TminData$tmin, by=list(TminData$id,TminData$year), FUN="length")
# Changing column names
colnames(TminDataYear) <- c("station", "year", "ncount")
# Getting rid of rows with less than 171 observations
TminDataYear <- subset(TminDataYear, TminDataYear$ncount >= 171)
# Counting observations per year for the prcp data
# Make new data frame with just the id, prcp value, and year
PrcpDataYear <- aggregate(PrcpData$prcp, by=list(PrcpData$id,PrcpData$year), FUN="length")
# Changing column names
colnames(PrcpDataYear) <- c("station", "year", "ncount")
PrcpDataYear <- subset(PrcpDataYear, PrcpDataYear$ncount >= 171)
# Counting number of years per station for tmax
TmaxStn <- aggregate(TmaxDataYear$year, by=list(TmaxDataYear$station), FUN="length")
# Renaming columns
colnames(TmaxStn) <- c("station", "ycount")
# Adding a min year column
TmaxStn$min <- aggregate(TmaxDataYear$year, by=list(TmaxDataYear$station), FUN="min")$x
# Adding a max year column
TmaxStn$max <- aggregate(TmaxDataYear$year, by=list(TmaxDataYear$station), FUN="max")$x
# Adding a column for the range of years covered by the station
TmaxStn$range <- (TmaxStn$max + 1) - TmaxStn$min
# Getting rid of rows with less than 50 years
TmaxStn <- subset(TmaxStn, TmaxStn$ycount >= 50)
# Adding a column for percent of years in range (measure of continuity)
TmaxStn$pctcont <- TmaxStn$ycount/TmaxStn$range
# Getting rid of rows with less than 75% of years in their range
TmaxStn <- subset(TmaxStn, TmaxStn$pctcont >= .75)
# Narrow down to rows with max year = 2019
TmaxStn <- subset(TmaxStn, TmaxStn$max == 2019)
# Counting number of years per station for tmin
TminStn <- aggregate(TminDataYear$year, by=list(TminDataYear$station), FUN="length")
# Renaming columns
colnames(TminStn) <- c("station", "ycount")
# Adding a min year column
TminStn$min <- aggregate(TminDataYear$year, by=list(TminDataYear$station), FUN="min")$x
# Adding a max year column
TminStn$max <- aggregate(TminDataYear$year, by=list(TminDataYear$station), FUN="max")$x
# Adding a column for the range of years covered by the station
TminStn$range <- (TminStn$max + 1) - TminStn$min
# Getting rid of rows with less than 50 years
TminStn <- subset(TminStn, TminStn$ycount >= 50)
# Adding a column for percent of years in range (measure of continuity)
TminStn$pctcont <- TminStn$ycount/TminStn$range
# Getting rid of rows with less than 75% of years in their range
TminStn <- subset(TminStn, TminStn$pctcont >= .75)
# Narrow down to rows with max year = 2019
TminStn <-subset(TminStn, TminStn$max == 2019)
# Counting number of years per station for prcp
PrcpStn <- aggregate(PrcpDataYear$year, by=list(PrcpDataYear$station), FUN="length")
# Renaming columns
colnames(PrcpStn) <- c("station", "ycount")
# Adding a min year column
PrcpStn$min <- aggregate(PrcpDataYear$year, by=list(PrcpDataYear$station), FUN="min")$x
# Adding a max year column
PrcpStn$max <- aggregate(PrcpDataYear$year, by=list(PrcpDataYear$station), FUN="max")$x
# Adding a column for the range of years covered by the station
PrcpStn$range <- (PrcpStn$max + 1) - PrcpStn$min
# Getting rid of rows with less than 50 years
PrcpStn <- subset(PrcpStn, PrcpStn$ycount >= 50)
# Adding a column for percent of years in range (measure of continuity)
PrcpStn$pctcont <- PrcpStn$ycount/PrcpStn$range
# Getting rid of rows with less than 75% of years in their range
PrcpStn <- subset(PrcpStn, PrcpStn$pctcont >= .75)
# narrow down to rows with max year = 2019
PrcpStn <- subset(PrcpStn, PrcpStn$max == 2019)
### Map stations ----
#start by mapping all stations
#assume coordinates are in WGS 84
#epsg 4326
#turn stations into spatial points
siteLL <- SpatialPoints(matrix(c(StationInfo$long,StationInfo$lat), ncol=2,byrow=FALSE),
CRS( "+init=epsg:4326") )
#reproject points into the ez coordinate system (utm)
siteP <- spTransform(siteLL,ez@proj4string)
ez@data$MINOR_DESC <- as.factor(ez@data$MINOR_DESC )
ez@data$MAJOR<- as.factor(ez@data$MAJOR )
#look at weather stations
plot(siteP, pch=19)
#set up colors based on major zone
MajorZones <- data.frame(MAJOR = unique(ez@data$MAJOR))
#colors
MajorZones$col <- c("#e28946",	"#ebb355","#db5236","#36638f","#74a1c3",
"#df9880",	"#8687c1","#4069bf","#0d4247",	"#ff5b3e",
"#576356","#31474f" )
#add colors to plot back in
ez@data <- left_join(ez@data,MajorZones, by="MAJOR")
#make a map of all weather sites
plot(ez, col=ez@data$col, border=NA)
legend("topleft", paste(MajorZones$MAJOR),fill=MajorZones$col, bty="n", cex=0.35)
plot(siteP, add=TRUE, pch=19, col=rgb(0.5,0.5,0.5,0.45), cex=0.5)
#look at Tmax
TmaxStn$station_id <- TmaxStn$station
sitesMax <- left_join(TmaxStn,StationInfo, by ="station_id")
maxPoints <- SpatialPoints(matrix(c(sitesMax $long,sitesMax $lat), ncol=2,byrow=FALSE),
CRS( "+init=epsg:4326") )
#reproject points into the ez coordinate system (utm)
maxP <- spTransform(maxPoints ,ez@proj4string)
plot(maxP, col="grey25",pch=19, add=TRUE)
title(main= "Map of TMax Stations")
##now look at Tmin
#look at weather stations
plot(siteP, pch=19)
#set up colors based on major zone
MajorZones <- data.frame(MAJOR = unique(ez@data$MAJOR))
#colors
MajorZones$col <- c("#e28946",	"#ebb355","#db5236","#36638f","#74a1c3",
"#df9880",	"#8687c1","#4069bf","#0d4247",	"#ff5b3e",
"#576356","#31474f" )
#add colors to plot back in
ez@data <- left_join(ez@data,MajorZones, by="MAJOR")
#make a map of all weather sites
plot(ez, col=ez@data$col, border=NA)
legend("topleft", paste(MajorZones$MAJOR),fill=MajorZones$col, bty="n", cex=0.35)
plot(siteP, add=TRUE, pch=19, col=rgb(0.5,0.5,0.5,0.45), cex=0.5)
#look at Tmin
TminStn$station_id <- TminStn$station
sitesMin <- left_join(TminStn,StationInfo, by ="station_id")
minPoints <- SpatialPoints(matrix(c(sitesMin $long,sitesMin $lat), ncol=2,byrow=FALSE),
CRS( "+init=epsg:4326") )
#reproject points into the ez coordinate system (utm)
minP <- spTransform(minPoints ,ez@proj4string)
plot(maxP, col="grey25",pch=19, add=TRUE)
title(main= "Map of TMin Stations")
#Now look at PRCP
#look at weather stations
plot(siteP, pch=19)
#set up colors based on major zone
MajorZones <- data.frame(MAJOR = unique(ez@data$MAJOR))
#colors
MajorZones$col <- c("#e28946",	"#ebb355","#db5236","#36638f","#74a1c3",
"#df9880",	"#8687c1","#4069bf","#0d4247",	"#ff5b3e",
"#576356","#31474f" )
#add colors to plot back in
ez@data <- left_join(ez@data,MajorZones, by="MAJOR")
#make a map of all weather sites
plot(ez, col=ez@data$col, border=NA)
legend("topleft", paste(MajorZones$MAJOR),fill=MajorZones$col, bty="n", cex=0.35)
plot(siteP, add=TRUE, pch=19, col=rgb(0.5,0.5,0.5,0.45), cex=0.5)
#look at Prcp
PrcpStn$station_id <- PrcpStn$station
sitesPrcp <- left_join(PrcpStn,StationInfo, by ="station_id")
prcpPoints <- SpatialPoints(matrix(c(sitesPrcp $long,sitesPrcp $lat), ncol=2,byrow=FALSE),
CRS( "+init=epsg:4326") )
#reproject points into the ez coordinate system (utm)
prcpP <- spTransform(prcpPoints ,ez@proj4string)
plot(prcpP, col="grey25",pch=19, add=TRUE)
title(main= "Map of Precip Stations")
### identify sites with all data types
AllStn <- data.frame(station_id = sitesMax$station_id, lat = sitesMax$lat, long = sitesMax$long, name = sitesMax$name)
AllStn <- inner_join(AllStn, sitesMin, by="station_id")
AllStn <- inner_join(AllStn, sitesPrcp, by="station_id")
# map the stations that have all data
#look at weather stations
plot(siteP, pch=19)
#set up colors based on major zone
MajorZones <- data.frame(MAJOR = unique(ez@data$MAJOR))
#colors
MajorZones$col <- c("#e28946",	"#ebb355","#db5236","#36638f","#74a1c3",
"#df9880",	"#8687c1","#4069bf","#0d4247",	"#ff5b3e",
"#576356","#31474f" )
#add colors to plot back in
ez@data <- left_join(ez@data,MajorZones, by="MAJOR")
#make a map of all weather sites
plot(ez, col=ez@data$col, border=NA)
legend("topleft", paste(MajorZones$MAJOR),fill=MajorZones$col, bty="n", cex=0.35)
plot(siteP, add=TRUE, pch=19, col=rgb(0.5,0.5,0.5,0.45), cex=0.5)
#look at Stations
allPoints <- SpatialPoints(matrix(c(AllStn $long,AllStn $lat), ncol=2,byrow=FALSE),
CRS( "+init=epsg:4326") )
#reproject points into the ez coordinate system (utm)
allP <- spTransform(allPoints ,ez@proj4string)
plot(allP, col="grey25",pch=19, add=TRUE)
title(main= "Map of Stations with Tmax, Tmin, and Prcp")
### WEEK 1 ----
### Creating one large data frame ----
# join tmax, tmin, and prcp data
AllData <- full_join(TmaxData, TminData, by = c("id"="id", "year"="year", "DOY" = "DOY"), copy = FALSE)
AllData <- full_join(AllData, PrcpData, by = c("id"="id", "year"="year", "DOY" = "DOY"), copy = FALSE)
# add station names of the 12 good stations
AllData <- inner_join(AllData, AllStn, by = c("id"="station_id"))
# add month column
AllData$Month <- month(AllData$date, label = TRUE)
# add decade column
AllData$Decade <- AllData$year - (AllData$year %% 10)
# Subset to just keep id, tmin, tmax, year, doy
AllData <- data.frame(StationID = AllData$id,
StationName = AllData$name.x,
DOY = AllData$DOY,
Month = AllData$Month,
Year = AllData$year,
Decade = AllData$Decade,
prcp = AllData$prcp,
tmax = AllData$tmax,
tmin = AllData$tmin)
# Adding average temperature column
AllData$tav <- ((AllData$tmax - AllData$tmin)/2) + AllData$tmin
# Adding freeze-thaw flag (less than -2.2 degrees and higher than 0 degrees in the same day)
# Maybe change these numbers?
AllData$FreezeThaw <- ifelse(AllData$tmin<(-2.2) & AllData$tmax>0, 1 , NA)
# Adding Freeze Thaw Flags for types of days
# Day Types: 1 = min/max < 0, 2 = min < 0 and max > 0, 3 = min/max > 0,
AllData$DayType <- ifelse(AllData$tmin<0 & AllData$tmax<0, 1,
ifelse(AllData$tmin<=0 & AllData$tmax>=0, 2,
ifelse(AllData$tmin>0 & AllData$tmax>0, 3, 0)))
# Making Day Type a Factor
AllData$DayType <- as.factor(AllData$DayType)
# Adding range of freeze thaw column
AllData$FTrange <- ifelse(AllData$FreezeThaw == 1, AllData$tmax - AllData$tmin, NA)
# Making station column a factor
AllData$StationID <- as.factor(AllData$StationID)
# Extreme values (occur <5% of the time)
## make table of extreme values for each station, then can join into AllData, then can highlight tmax higher than extreme value
## by decade
# highest 5% tmax
ExtRef <- aggregate(AllData$tmax, by = list(AllData$StationID, AllData$Month), FUN = "quantile", prob = 0.95, na.rm = TRUE)
# lowest 5% tmin
ExtRef$tmin <- aggregate(AllData$tmin, by = list(AllData$StationID, AllData$Month), FUN = "quantile", prob = 0.05, na.rm = TRUE)$x
# max tmax
ExtRef$max <- aggregate(AllData$tmax, by = list(AllData$StationID, AllData$Month), max, na.rm = TRUE)$x
# min tmin
ExtRef$min <- aggregate(AllData$tmin, by = list(AllData$StationID, AllData$Month), min, na.rm = TRUE)$x
# clean up data table
ExtRef <- data.frame(StationID = ExtRef$Group.1,
Month = ExtRef$Group.2,
RefMin = ExtRef$min,
RefLo = ExtRef$tmin,
RefHi = ExtRef$x,
RefMax = ExtRef$max)
# join to AllData
AllData <- left_join(AllData, ExtRef, by = c("StationID", "Month"))
# add flag for extreme high tmax
AllData$ExtrHi <- ifelse(AllData$tmax>=AllData$RefHi, 1, NA)
# add flag for extreme low tmin
AllData$ExtrLo <- ifelse(AllData$tmin<=AllData$RefLo,1,NA)
# make extreme values dataframe
ExtVals <- aggregate(AllData$tmax, by = list(AllData$StationID, AllData$Month, AllData$Year), FUN = "quantile", prob = 0.95, na.rm = TRUE)
colnames(ExtVals) <- c("StationID", "Month", "Year", "HiTmax")
ExtVals$LoTmin <- aggregate(AllData$tmin, by = list(AllData$StationID, AllData$Month, AllData$Year), FUN = "quantile", prob = 0.05, na.rm = TRUE)$x
# join extreme values to alldata
AllData <- left_join(AllData, ExtVals, by = c("StationID", "Month","Year"))
# add thawing degree day accumulation
AllData <- AllData %>%
group_by(Year, StationID) %>%
mutate(TDD = cumsum(ifelse(is.na(tav), 0, ifelse(tav >= 0, tav, 0))))
# subset to each station
alldata1 <- subset(AllData, AllData$StationID=="USC00300785")
alldata2 <- subset(AllData, AllData$StationID=="USC00301752")
alldata3 <- subset(AllData, AllData$StationID=="USC00304102")
alldata4 <- subset(AllData, AllData$StationID=="USC00304912")
alldata5 <- subset(AllData, AllData$StationID=="USC00306085")
alldata6 <- subset(AllData, AllData$StationID=="USC00306314")
alldata7 <- subset(AllData, AllData$StationID=="USC00309000")
alldata8 <- subset(AllData, AllData$StationID=="USW00014735")
alldata9 <- subset(AllData, AllData$StationID=="USW00014750")
alldata10 <- subset(AllData, AllData$StationID=="USW00014771")
alldata11 <- subset(AllData, AllData$StationID=="USW00094725")
alldata12 <- subset(AllData, AllData$StationID=="USW00094790")
## subset to spring data frame
SpringData <- subset(AllData, AllData$Month %in% c("Mar","Apr","May"))
SpringData$DayID <- ifelse(leap_year(SpringData$Year), SpringData$DOY - 60, SpringData$DOY - 59)
# spring anomalies
SpringAnomaly <- aggregate(SpringData$tav, by = list(SpringData$StationID, SpringData$StationName, SpringData$DOY), FUN = "mean", na.rm = TRUE)
colnames(SpringAnomaly) <- c("StationID", "StationName", "DOY", "DayTav")
SpringAnomaly$sd <- aggregate(SpringData$tav, by = list(SpringData$StationID, SpringData$StationName, SpringData$DOY), FUN = "sd", na.rm = TRUE)$x
# joining spring anomalies to spring data
SpringData <- left_join(SpringData, SpringAnomaly, by = c("StationID", "StationName", "DOY"))
# adding anomaly column to spring data
SpringData$AnRaw <- (SpringData$tav - SpringData$DayTav)
SpringData$AnStd <- (SpringData$tav - SpringData$DayTav) / SpringData$sd
# make a data frame of monthly averages
SpringMonths <- aggregate(SpringData$tmax, by=list(SpringData$Year,SpringData$StationID, SpringData$StationName, SpringData$Month), FUN="mean", na.rm = TRUE)
colnames(SpringMonths) <- c("year","StationID","StationName", "month","tmax")
SpringMonths$tmin <- aggregate(SpringData$tmin, by=list(SpringData$Year,SpringData$StationID,SpringData$StationName,SpringData$Month), FUN="mean", na.rm = TRUE)$x
SpringMonths$tav <- aggregate(SpringData$tav, by=list(SpringData$Year,SpringData$StationID,SpringData$StationName,SpringData$Month), FUN="mean", na.rm = TRUE)$x
# add columns of extreme hi and lo temperature values
SpringMonths$ExtHi <- aggregate(SpringData$HiTmax, by=list(SpringData$Year, SpringData$StationID, SpringData$StationName,SpringData$Month), FUN = "mean", na.rm = TRUE)$x
SpringMonths$ExtLo <- aggregate(SpringData$LoTmin, by=list(SpringData$Year, SpringData$StationID, SpringData$StationName,SpringData$Month), FUN = "mean", na.rm = TRUE)$x
# add columns counting extreme temp flags
SpringMonths$ExHiCount <- aggregate(SpringData$ExtrHi, by=list(SpringData$Year, SpringData$StationID, SpringData$StationName,SpringData$Month) , FUN = "sum", na.rm = TRUE)$x
SpringMonths$ExLoCount <- aggregate(SpringData$ExtrLo, by=list(SpringData$Year, SpringData$StationID, SpringData$StationName,SpringData$Month), FUN = "sum", na.rm = TRUE)$x
# add columns with freeze thaw flags and range
SpringMonths$FTdays <- aggregate(SpringData$FreezeThaw, by=list(SpringData$Year, SpringData$StationID, SpringData$StationName,SpringData$Month), FUN="sum", na.rm = TRUE)$x
SpringMonths$FTrange <- aggregate(SpringData$FTrange, by=list(SpringData$Year, SpringData$StationID, SpringData$StationName,SpringData$Month), FUN="mean", na.rm = TRUE)$x
# data frame with yearly averages - spring months averaged together
SpringYear <- aggregate(SpringData$tmax, by=list(SpringData$Year,SpringData$StationID, SpringData$StationName), FUN="mean", na.rm = TRUE)
colnames(SpringYear) <- c("year","StationID","StationName", "tmax")
SpringYear$tmin <- aggregate(SpringData$tmin, by=list(SpringData$Year,SpringData$StationID,SpringData$StationName), FUN="mean", na.rm = TRUE)$x
SpringYear$tav <- aggregate(SpringData$tav, by=list(SpringData$Year,SpringData$StationID,SpringData$StationName), FUN="mean", na.rm = TRUE)$x
# add columns of extreme hi and lo temperature values
SpringYear$ExtHi <- aggregate(SpringData$HiTmax, by=list(SpringData$Year, SpringData$StationID, SpringData$StationName), FUN = "mean", na.rm = TRUE)$x
SpringYear$ExtLo <- aggregate(SpringData$LoTmin, by=list(SpringData$Year, SpringData$StationID, SpringData$StationName), FUN = "mean", na.rm = TRUE)$x
# add columns counting extreme temp flags
SpringYear$ExHiCount <- aggregate(SpringData$ExtrHi, by=list(SpringData$Year, SpringData$StationID, SpringData$StationName) , FUN = "sum", na.rm = TRUE)$x
SpringYear$ExLoCount <- aggregate(SpringData$ExtrLo, by=list(SpringData$Year, SpringData$StationID, SpringData$StationName), FUN = "sum", na.rm = TRUE)$x
# add columns with freeze thaw flags and range
SpringYear$FTdays <- aggregate(SpringData$FreezeThaw, by=list(SpringData$Year, SpringData$StationID, SpringData$StationName), FUN="sum", na.rm = TRUE)$x
SpringYear$FTrange <- aggregate(SpringData$FTrange, by=list(SpringData$Year, SpringData$StationID, SpringData$StationName), FUN="mean", na.rm = TRUE)$x
# decade averages by month
SpringDecade<- aggregate(SpringData$tmax, by = list(SpringData$StationID, SpringData$StationName, SpringData$Decade, SpringData$Month), FUN = "mean", na.rm = TRUE)
colnames(SpringDecade) <- c("StationID", "StationName", "Decade", "Month", "tmax")
SpringDecade$tmin <- aggregate(SpringData$tmin, by = list(SpringData$StationID, SpringData$StationName, SpringData$Decade, SpringData$Month), FUN = "mean", na.rm = TRUE)$x
SpringDecade$tav <- aggregate(SpringData$tav, by = list(SpringData$StationID, SpringData$StationName, SpringData$Decade, SpringData$Month), FUN = "mean", na.rm = TRUE)$x
SpringDecade$ExtHi <- aggregate(SpringData$HiTmax, by = list(SpringData$StationID, SpringData$StationName, SpringData$Decade, SpringData$Month), FUN = "mean", na.rm = TRUE)$x
SpringDecade$ExtLo <- aggregate(SpringData$LoTmin, by = list(SpringData$StationID, SpringData$Decade, SpringData$Month), FUN = "mean", na.rm = TRUE)$x
SpringDecade$ExHiCount <- aggregate(SpringData$ExtrHi, by=list(SpringData$StationID, SpringData$Decade, SpringData$Month), FUN="sum", na.rm = TRUE)$x
SpringDecade$ExLoCount <- aggregate(SpringData$ExtrLo,by=list(SpringData$StationID, SpringData$Decade, SpringData$Month), FUN="sum", na.rm = TRUE)$x
SpringDecade$FTdays <- aggregate(SpringData$FreezeThaw, by = list(SpringData$StationID, SpringData$Decade, SpringData$Month), FUN = "sum", na.rm = TRUE)$x / 30
SpringDecade$FTrange <- aggregate(SpringData$FTrange, by = list(SpringData$StationID, SpringData$Decade, SpringData$Month), FUN = "mean", na.rm = TRUE)$x
# decade averages with spring months averaged together
SpringDecadeAv <- aggregate(SpringData$tmax, by = list(SpringData$StationID, SpringData$StationName, SpringData$Decade), FUN = "mean", na.rm = TRUE)
colnames(SpringDecadeAv) <- c("StationID", "StationName", "Decade", "tmax")
SpringDecadeAv$tmin <- aggregate(SpringData$tmin, by = list(SpringData$StationID, SpringData$StationName, SpringData$Decade), FUN = "mean", na.rm = TRUE)$x
SpringDecadeAv$tav <- aggregate(SpringData$tav, by = list(SpringData$StationID, SpringData$StationName, SpringData$Decade), FUN = "mean", na.rm = TRUE)$x
SpringDecadeAv$ExtHi <- aggregate(SpringData$HiTmax, by = list(SpringData$StationID, SpringData$StationName, SpringData$Decade), FUN = "mean", na.rm = TRUE)$x
SpringDecadeAv$ExtLo <- aggregate(SpringData$LoTmin, by = list(SpringData$StationID, SpringData$Decade), FUN = "mean", na.rm = TRUE)$x
SpringDecadeAv$ExHiCount <- aggregate(SpringData$ExtrHi, by=list(SpringData$StationID, SpringData$Decade), FUN="sum", na.rm = TRUE)$x
SpringDecadeAv$ExLoCount <- aggregate(SpringData$ExtrLo,by=list(SpringData$StationID, SpringData$Decade), FUN="sum", na.rm = TRUE)$x
SpringDecadeAv$FTdays <- aggregate(SpringData$FreezeThaw, by = list(SpringData$StationID, SpringData$Decade), FUN = "sum", na.rm = TRUE)$x / 30
SpringDecadeAv$FTrange <- aggregate(SpringData$FTrange, by = list(SpringData$StationID, SpringData$Decade), FUN = "mean", na.rm = TRUE)$x
# subset to specific months
# all march data
MarData <- subset(AllData, AllData$Month == "Mar")
# march yearly averages
MarYear <- subset(SpringMonths, SpringMonths$month == "Mar")
# march decade averages
MarDecade <- subset(SpringDecade, SpringDecade$Month == "Mar")
# all april data
AprData <- subset(AllData, AllData$Month == "Apr")
# april yearly averages
AprYear <- subset(SpringMonths, SpringMonths$month == "Apr")
# april decade averages
AprDecade <- subset(SpringDecade, SpringDecade$Month == "Apr")
# all may data
MayData <- subset(AllData, AllData$Month == "May")
# may yearly averages
MayYear <- subset(SpringMonths, SpringMonths$month == "May")
# may decade averages
MayDecade <- subset(SpringDecade, SpringDecade$Month == "May")
# subset to specific stations
# yearly averages
stn1 <- subset(SpringYear, SpringYear$StationID == "USC00300785")
stn2 <- subset(SpringYear, SpringYear$StationID == "USC00301752")
stn3 <- subset(SpringYear, SpringYear$StationID == "USC00304102")
stn4 <- subset(SpringYear, SpringYear$StationID == "USC00304912")
stn5 <- subset(SpringYear, SpringYear$StationID == "USC00306085")
stn6 <- subset(SpringYear, SpringYear$StationID == "USC00306314")
stn7 <- subset(SpringYear, SpringYear$StationID == "USC00309000")
stn8 <- subset(SpringYear, SpringYear$StationID == "USW00014735")
stn9 <- subset(SpringYear, SpringYear$StationID == "USW00014750")
stn10 <- subset(SpringYear, SpringYear$StationID == "USW00014771")
stn11 <- subset(SpringYear, SpringYear$StationID == "USW00094725")
stn12 <- subset(SpringYear, SpringYear$StationID == "USW00094790")
#decadal averages
stn1dc <- subset(SpringDecadeAv, SpringDecadeAv$StationID == "USC00300785")
stn2dc <- subset(SpringDecadeAv, SpringDecadeAv$StationID == "USC00301752")
stn3dc <- subset(SpringDecadeAv, SpringDecadeAv$StationID == "USC00304102")
stn4dc <- subset(SpringDecadeAv, SpringDecadeAv$StationID == "USC00304912")
stn5dc <- subset(SpringDecadeAv, SpringDecadeAv$StationID == "USC00306085")
stn6dc <- subset(SpringDecadeAv, SpringDecadeAv$StationID == "USC00306314")
stn7dc <- subset(SpringDecadeAv, SpringDecadeAv$StationID == "USC00309000")
stn8dc <- subset(SpringDecadeAv, SpringDecadeAv$StationID == "USW00014735")
stn9dc <- subset(SpringDecadeAv, SpringDecadeAv$StationID == "USW00014750")
stn10dc <- subset(SpringDecadeAv, SpringDecadeAv$StationID == "USW00014771")
stn11dc <- subset(SpringDecadeAv, SpringDecadeAv$StationID == "USW00094725")
stn12dc <- subset(SpringDecadeAv, SpringDecadeAv$StationID == "USW00094790")
