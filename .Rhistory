mid = "#d1e5f0",
high = "#d6604d",
na.value = "white")
## subset to spring data frame
SpringData <- subset(AllData, AllData$Month %in% c("Mar","Apr","May"))
SpringData$DayID <- ifelse(leap_year(SpringData$Year), SpringData$DOY - 60, SpringData$DOY - 59)
# spring anomalies
SpringAnomaly <- aggregate(SpringData$tav, by = list(SpringData$StationID, SpringData$StationName, SpringData$DOY), FUN = "mean", na.rm = TRUE)
colnames(SpringAnomaly) <- c("StationID", "StationName", "DOY", "DayTav")
SpringAnomaly$sd <- aggregate(SpringData$tav, by = list(SpringData$StationID, SpringData$StationName, SpringData$DOY), FUN = "sd", na.rm = TRUE)$x
# joining spring anomalies to spring data
SpringData <- left_join(SpringData, SpringAnomaly, by = c("StationID", "StationName", "DOY"))
# adding anomaly column to spring data
SpringData$AnRaw <- (SpringData$tav - SpringData$DayTav)
SpringData$AnStd <- (SpringData$tav - SpringData$DayTav) / SpringData$sd
# make a data frame of monthly averages
SpringMonths <- aggregate(SpringData$tmax, by=list(SpringData$Year,SpringData$StationID, SpringData$StationName, SpringData$Month), FUN="mean", na.rm = TRUE)
colnames(SpringMonths) <- c("year","StationID","StationName", "month","tmax")
SpringMonths$tmin <- aggregate(SpringData$tmin, by=list(SpringData$Year,SpringData$StationID,SpringData$StationName,SpringData$Month), FUN="mean", na.rm = TRUE)$x
SpringMonths$tav <- aggregate(SpringData$tav, by=list(SpringData$Year,SpringData$StationID,SpringData$StationName,SpringData$Month), FUN="mean", na.rm = TRUE)$x
# add columns of extreme hi and lo temperature values
SpringMonths$ExtHi <- aggregate(SpringData$HiTmax, by=list(SpringData$Year, SpringData$StationID, SpringData$StationName,SpringData$Month), FUN = "mean", na.rm = TRUE)$x
SpringMonths$ExtLo <- aggregate(SpringData$LoTmin, by=list(SpringData$Year, SpringData$StationID, SpringData$StationName,SpringData$Month), FUN = "mean", na.rm = TRUE)$x
# add columns counting extreme temp flags
SpringMonths$ExHiCount <- aggregate(SpringData$ExtrHi, by=list(SpringData$Year, SpringData$StationID, SpringData$StationName,SpringData$Month) , FUN = "sum", na.rm = TRUE)$x
SpringMonths$ExLoCount <- aggregate(SpringData$ExtrLo, by=list(SpringData$Year, SpringData$StationID, SpringData$StationName,SpringData$Month), FUN = "sum", na.rm = TRUE)$x
# add columns with freeze thaw flags and range
SpringMonths$FTdays <- aggregate(SpringData$FreezeThaw, by=list(SpringData$Year, SpringData$StationID, SpringData$StationName,SpringData$Month), FUN="sum", na.rm = TRUE)$x
SpringMonths$FTrange <- aggregate(SpringData$FTrange, by=list(SpringData$Year, SpringData$StationID, SpringData$StationName,SpringData$Month), FUN="mean", na.rm = TRUE)$x
# data frame with yearly averages - spring months averaged together
SpringYear <- aggregate(SpringData$tmax, by=list(SpringData$Year,SpringData$StationID, SpringData$StationName), FUN="mean", na.rm = TRUE)
colnames(SpringYear) <- c("year","StationID","StationName", "tmax")
SpringYear$tmin <- aggregate(SpringData$tmin, by=list(SpringData$Year,SpringData$StationID,SpringData$StationName), FUN="mean", na.rm = TRUE)$x
SpringYear$tav <- aggregate(SpringData$tav, by=list(SpringData$Year,SpringData$StationID,SpringData$StationName), FUN="mean", na.rm = TRUE)$x
# add columns of extreme hi and lo temperature values
SpringYear$ExtHi <- aggregate(SpringData$HiTmax, by=list(SpringData$Year, SpringData$StationID, SpringData$StationName), FUN = "mean", na.rm = TRUE)$x
SpringYear$ExtLo <- aggregate(SpringData$LoTmin, by=list(SpringData$Year, SpringData$StationID, SpringData$StationName), FUN = "mean", na.rm = TRUE)$x
# add columns counting extreme temp flags
SpringYear$ExHiCount <- aggregate(SpringData$ExtrHi, by=list(SpringData$Year, SpringData$StationID, SpringData$StationName) , FUN = "sum", na.rm = TRUE)$x
SpringYear$ExLoCount <- aggregate(SpringData$ExtrLo, by=list(SpringData$Year, SpringData$StationID, SpringData$StationName), FUN = "sum", na.rm = TRUE)$x
# add columns with freeze thaw flags and range
SpringYear$FTdays <- aggregate(SpringData$FreezeThaw, by=list(SpringData$Year, SpringData$StationID, SpringData$StationName), FUN="sum", na.rm = TRUE)$x
SpringYear$FTrange <- aggregate(SpringData$FTrange, by=list(SpringData$Year, SpringData$StationID, SpringData$StationName), FUN="mean", na.rm = TRUE)$x
# decade averages by month
SpringDecade<- aggregate(SpringData$tmax, by = list(SpringData$StationID, SpringData$StationName, SpringData$Decade, SpringData$Month), FUN = "mean", na.rm = TRUE)
colnames(SpringDecade) <- c("StationID", "StationName", "Decade", "Month", "tmax")
SpringDecade$tmin <- aggregate(SpringData$tmin, by = list(SpringData$StationID, SpringData$StationName, SpringData$Decade, SpringData$Month), FUN = "mean", na.rm = TRUE)$x
SpringDecade$tav <- aggregate(SpringData$tav, by = list(SpringData$StationID, SpringData$StationName, SpringData$Decade, SpringData$Month), FUN = "mean", na.rm = TRUE)$x
SpringDecade$ExtHi <- aggregate(SpringData$HiTmax, by = list(SpringData$StationID, SpringData$StationName, SpringData$Decade, SpringData$Month), FUN = "mean", na.rm = TRUE)$x
SpringDecade$ExtLo <- aggregate(SpringData$LoTmin, by = list(SpringData$StationID, SpringData$Decade, SpringData$Month), FUN = "mean", na.rm = TRUE)$x
SpringDecade$ExHiCount <- aggregate(SpringData$ExtrHi, by=list(SpringData$StationID, SpringData$Decade, SpringData$Month), FUN="sum", na.rm = TRUE)$x
SpringDecade$ExLoCount <- aggregate(SpringData$ExtrLo,by=list(SpringData$StationID, SpringData$Decade, SpringData$Month), FUN="sum", na.rm = TRUE)$x
SpringDecade$FTdays <- aggregate(SpringData$FreezeThaw, by = list(SpringData$StationID, SpringData$Decade, SpringData$Month), FUN = "sum", na.rm = TRUE)$x / 30
SpringDecade$FTrange <- aggregate(SpringData$FTrange, by = list(SpringData$StationID, SpringData$Decade, SpringData$Month), FUN = "mean", na.rm = TRUE)$x
# decade averages with spring months averaged together
SpringDecadeAv <- aggregate(SpringData$tmax, by = list(SpringData$StationID, SpringData$StationName, SpringData$Decade), FUN = "mean", na.rm = TRUE)
colnames(SpringDecadeAv) <- c("StationID", "StationName", "Decade", "tmax")
SpringDecadeAv$tmin <- aggregate(SpringData$tmin, by = list(SpringData$StationID, SpringData$StationName, SpringData$Decade), FUN = "mean", na.rm = TRUE)$x
SpringDecadeAv$tav <- aggregate(SpringData$tav, by = list(SpringData$StationID, SpringData$StationName, SpringData$Decade), FUN = "mean", na.rm = TRUE)$x
SpringDecadeAv$ExtHi <- aggregate(SpringData$HiTmax, by = list(SpringData$StationID, SpringData$StationName, SpringData$Decade), FUN = "mean", na.rm = TRUE)$x
SpringDecadeAv$ExtLo <- aggregate(SpringData$LoTmin, by = list(SpringData$StationID, SpringData$Decade), FUN = "mean", na.rm = TRUE)$x
SpringDecadeAv$ExHiCount <- aggregate(SpringData$ExtrHi, by=list(SpringData$StationID, SpringData$Decade), FUN="sum", na.rm = TRUE)$x
SpringDecadeAv$ExLoCount <- aggregate(SpringData$ExtrLo,by=list(SpringData$StationID, SpringData$Decade), FUN="sum", na.rm = TRUE)$x
SpringDecadeAv$FTdays <- aggregate(SpringData$FreezeThaw, by = list(SpringData$StationID, SpringData$Decade), FUN = "sum", na.rm = TRUE)$x / 30
SpringDecadeAv$FTrange <- aggregate(SpringData$FTrange, by = list(SpringData$StationID, SpringData$Decade), FUN = "mean", na.rm = TRUE)$x
# subset to specific months
# all march data
MarData <- subset(AllData, AllData$Month == "Mar")
# march yearly averages
MarYear <- subset(SpringMonths, SpringMonths$month == "Mar")
# march decade averages
MarDecade <- subset(SpringDecade, SpringDecade$Month == "Mar")
# all april data
AprData <- subset(AllData, AllData$Month == "Apr")
# april yearly averages
AprYear <- subset(SpringMonths, SpringMonths$month == "Apr")
# april decade averages
AprDecade <- subset(SpringDecade, SpringDecade$Month == "Apr")
# all may data
MayData <- subset(AllData, AllData$Month == "May")
# may yearly averages
MayYear <- subset(SpringMonths, SpringMonths$month == "May")
# may decade averages
MayDecade <- subset(SpringDecade, SpringDecade$Month == "May")
# subset to specific stations
# yearly averages
stn1 <- subset(SpringYear, SpringYear$StationID == "USC00300785")
stn2 <- subset(SpringYear, SpringYear$StationID == "USC00301752")
stn3 <- subset(SpringYear, SpringYear$StationID == "USC00304102")
stn4 <- subset(SpringYear, SpringYear$StationID == "USC00304912")
stn5 <- subset(SpringYear, SpringYear$StationID == "USC00306085")
stn6 <- subset(SpringYear, SpringYear$StationID == "USC00306314")
stn7 <- subset(SpringYear, SpringYear$StationID == "USC00309000")
stn8 <- subset(SpringYear, SpringYear$StationID == "USW00014735")
stn9 <- subset(SpringYear, SpringYear$StationID == "USW00014750")
stn10 <- subset(SpringYear, SpringYear$StationID == "USW00014771")
stn11 <- subset(SpringYear, SpringYear$StationID == "USW00094725")
stn12 <- subset(SpringYear, SpringYear$StationID == "USW00094790")
stn1dc <- subset(SpringDecadeAv, SpringDecadeAv$StationID == "USC00300785")
stn2dc <- subset(SpringDecadeAv, SpringDecadeAv$StationID == "USC00301752")
stn3dc <- subset(SpringDecadeAv, SpringDecadeAv$StationID == "USC00304102")
stn4dc <- subset(SpringDecadeAv, SpringDecadeAv$StationID == "USC00304912")
stn5dc <- subset(SpringDecadeAv, SpringDecadeAv$StationID == "USC00306085")
stn6dc <- subset(SpringDecadeAv, SpringDecadeAv$StationID == "USC00306314")
stn7dc <- subset(SpringDecadeAv, SpringDecadeAv$StationID == "USC00309000")
stn8dc <- subset(SpringDecadeAv, SpringDecadeAv$StationID == "USW00014735")
stn9dc <- subset(SpringDecadeAv, SpringDecadeAv$StationID == "USW00014750")
stn10dc <- subset(SpringDecadeAv, SpringDecadeAv$StationID == "USW00014771")
stn11dc <- subset(SpringDecadeAv, SpringDecadeAv$StationID == "USW00094725")
stn12dc <- subset(SpringDecadeAv, SpringDecadeAv$StationID == "USW00094790")
# Station 8
# raw temps
stn8all <- subset(SpringData, SpringData$StationID == "USW00014735")
ggplot(data = stn8all, mapping = aes(x = Year, y = DayID, fill = tav)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature (c)",
low = "#4393c3",
mid = "#d1e5f0",
high = "#d6604d",
na.value = "white")
# standardized anomalies
ggplot(data = stn8all, mapping = aes(x = Year, y = DayID, fill = AnStd)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#4393c3",
mid = "#d1e5f0",
high = "#d6604d",
na.value = "white")
# raw anomalies
ggplot(data = stn8all, mapping = aes(x = Year, y = DayID, fill = AnRaw)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#4393c3",
mid = "#d1e5f0",
high = "#d6604d",
na.value = "white")
# standardized anomalies
ggplot(data = stn8all, mapping = aes(x = Year, y = DayID, fill = AnStd)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#2166ac",
mid = "#d1e5f0",
high = "##b2182b",
na.value = "white")
# standardized anomalies
ggplot(data = stn8all, mapping = aes(x = Year, y = DayID, fill = AnStd)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#2166ac",
mid = "#d1e5f0",
high = "#b2182b",
na.value = "white")
# standardized anomalies
ggplot(data = stn8all, mapping = aes(x = Year, y = DayID, fill = AnStd)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#4575b4",
mid = "#ffffbf",
high = "#d73027",
na.value = "white")
# raw anomalies
ggplot(data = stn8all, mapping = aes(x = Year, y = DayID, fill = AnRaw)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#4393c3",
mid = "#d1e5f0",
high = "#d6604d",
na.value = "white")
ggplot(data = stn8all, mapping = aes(x = Year, y = DayID, fill = tav)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature (c)",
low = "#4393c3",
mid = "#d1e5f0",
high = "#d6604d",
na.value = "white")
# average temperatures by decade for all stations
ggplot(data = SpringDecadeAv, aes(x = Decade, y = tav, color = StationName))+
geom_line()+
scale_color_brewer(palette = "Paired")+
theme_classic()+
xlim(1950,2020)+
labs(x = "Decade", y = "Temperature (celsius)", title = "Average Spring Temperatures")
# Station 8
# raw temps
stn8all <- subset(SpringData, SpringData$StationID == "USW00014735")
ggplot(data = stn8all, mapping = aes(x = Year, y = DayID, fill = tav)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature (c)",
low = "#4393c3",
mid = "#d1e5f0",
high = "#d6604d",
na.value = "white")
# standardized anomalies
ggplot(data = stn8all, mapping = aes(x = Year, y = DayID, fill = AnStd)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#4575b4",
mid = "#ffffbf",
high = "#d73027",
na.value = "white")
ggplot(data = stn8all, mapping = aes(x = Year, y = DayID, fill = tav)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature (c)",
low = "#4393c3",
mid = "#d1e5f0",
high = "#d6604d",
na.value = "white")
# standardized anomalies
ggplot(data = stn8all, mapping = aes(x = Year, y = DayID, fill = AnStd)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#4575b4",
mid = "#ffffbf",
high = "#d73027",
na.value = "white")
# raw anomalies
ggplot(data = stn8all, mapping = aes(x = Year, y = DayID, fill = AnRaw)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#4393c3",
mid = "#d1e5f0",
high = "#d6604d",
na.value = "white")
# Station 8
# raw temps
stn8all <- subset(SpringData, SpringData$StationID == "USW00014735")
ggplot(data = stn8all, mapping = aes(x = Year, y = DayID, fill = tav)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature (c)",
low = "#4393c3",
mid = "#d1e5f0",
high = "#d6604d",
na.value = "white")
# standardized anomalies
ggplot(data = stn8all, mapping = aes(x = Year, y = DayID, fill = AnStd)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#4575b4",
mid = "#ffffbf",
high = "#d73027",
na.value = "white")
# raw anomalies
ggplot(data = stn8all, mapping = aes(x = Year, y = DayID, fill = AnRaw)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#4393c3",
mid = "#d1e5f0",
high = "#d6604d",
na.value = "white")
# raw anomalies
ggplot(data = stn8all, mapping = aes(x = Year, y = DayID, fill = AnRaw)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#4393c3",
mid = "#d1e5f0",
high = "#d6604d",
na.value = "white") +
labs(title = "Temperature Anomalies Over Time in Albany, NY")
ggplot(data = stn8all, mapping = aes(x = Year, y = DayID, fill = tav)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature (c)",
low = "#4393c3",
mid = "#d1e5f0",
high = "#d6604d",
na.value = "white") +
labs(title = "Spring Temperatures in Albany, NY")
# standardized anomalies
ggplot(data = stn8all, mapping = aes(x = Year, y = DayID, fill = AnStd)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#4575b4",
mid = "#ffffbf",
high = "#d73027",
na.value = "white") +
labs(title = "Standardized Spring Temperature Anomalies in Albany, NY")
# raw anomalies
ggplot(data = stn8all, mapping = aes(x = Year, y = DayID, fill = AnRaw)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#4393c3",
mid = "#d1e5f0",
high = "#d6604d",
na.value = "white") +
labs(title = "Spring Temperature Anomalies in Albany, NY")
# raw anomalies
ggplot(data = stn8all, mapping = aes(x = Year, y = DayID, fill = AnRaw)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#4575b4",
mid = "#ffffbf",
high = "#d73027",
na.value = "white") +
labs(title = "Spring Temperature Anomalies in Albany, NY")
ggplot(data = stn7all, mapping = aes(x = Year, y = DayID, fill = tav)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature (c)",
low = "#4393c3",
mid = "#d1e5f0",
high = "#d6604d",
na.value = "white") +
labs(title = "Spring Temperatures in Watertown, NY")
# Station 7
# raw temps
stn7all <- subset(SpringData, SpringData$StationID == "USC00309000")
ggplot(data = stn7all, mapping = aes(x = Year, y = DayID, fill = tav)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature (c)",
low = "#4393c3",
mid = "#d1e5f0",
high = "#d6604d",
na.value = "white") +
labs(title = "Spring Temperatures in Watertown, NY")
# standardized anomalies
ggplot(data = stn7all, mapping = aes(x = Year, y = DayID, fill = AnStd)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#4575b4",
mid = "#ffffbf",
high = "#d73027",
na.value = "white") +
labs(title = "Standardized Spring Temperature Anomalies in Watertown, NY")
# raw anomalies
ggplot(data = stn7all, mapping = aes(x = Year, y = DayID, fill = AnRaw)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#4575b4",
mid = "#ffffbf",
high = "#d73027",
na.value = "white") +
labs(title = "Spring Temperature Anomalies in Watertown, NY")
# Station 10
# raw temps
stn10all <- subset(SpringData, SpringData$StationID == "USW00014771")
ggplot(data = stn10all, mapping = aes(x = Year, y = DayID, fill = tav)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature (c)",
low = "#4393c3",
mid = "#d1e5f0",
high = "#d6604d",
na.value = "white") +
labs(title = "Spring Temperatures in Syracuse, NY")
# standardized anomalies
ggplot(data = stn10all, mapping = aes(x = Year, y = DayID, fill = AnStd)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#4575b4",
mid = "#ffffbf",
high = "#d73027",
na.value = "white") +
labs(title = "Standardized Spring Temperature Anomalies in Syracuse, NY")
# raw anomalies
ggplot(data = stn10all, mapping = aes(x = Year, y = DayID, fill = AnRaw)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#4575b4",
mid = "#ffffbf",
high = "#d73027",
na.value = "white") +
labs(title = "Spring Temperature Anomalies in Syracuse, NY")
# standardized anomalies
ggplot(data = stn10all, mapping = aes(x = Year, y = DayID, fill = AnStd)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#4575b4",
mid = "#ffffbf",
high = "#d73027",
na.value = "white") +
labs(title = "Standardized Spring Temperature Anomalies in Syracuse, NY")
# standardized anomalies
ggplot(data = stn10all, mapping = aes(x = Year, y = DayID, fill = AnStd)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#4575b4",
mid = "#ffffbf",
high = "#d73027",
na.value = "white") +
hline(y = c(1, 32, 62))+
labs(title = "Standardized Spring Temperature Anomalies in Syracuse, NY")
# standardized anomalies
ggplot(data = stn10all, mapping = aes(x = Year, y = DayID, fill = AnStd)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#4575b4",
mid = "#ffffbf",
high = "#d73027",
na.value = "white") +
geom_hline(y = c(1, 32, 62))+
labs(title = "Standardized Spring Temperature Anomalies in Syracuse, NY")
# standardized anomalies
ggplot(data = stn10all, mapping = aes(x = Year, y = DayID, fill = AnStd)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#4575b4",
mid = "#ffffbf",
high = "#d73027",
na.value = "white") +
geom_hline(yintercept = c(1, 32, 62))+
labs(title = "Standardized Spring Temperature Anomalies in Syracuse, NY")
# raw anomalies
ggplot(data = stn10all, mapping = aes(x = Year, y = DayID, fill = AnRaw)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#4575b4",
mid = "#ffffbf",
high = "#d73027",
na.value = "white") +
geom_hline(yintercept = c(1, 32, 62))+
labs(title = "Spring Temperature Anomalies in Syracuse, NY")
# Station 12
# raw temps
stn12all <- subset(SpringData, SpringData$StationID == "USW00094790")
ggplot(data = stn12all, mapping = aes(x = Year, y = DayID, fill = tav)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature (c)",
low = "#4393c3",
mid = "#d1e5f0",
high = "#d6604d",
na.value = "white") +
geom_hline(yintercept = c(1, 32, 62))+
labs(title = "Spring Temperatures in Watertown Airport, NY")
# standardized anomalies
ggplot(data = stn12all, mapping = aes(x = Year, y = DayID, fill = AnStd)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#4575b4",
mid = "#ffffbf",
high = "#d73027",
na.value = "white") +
geom_hline(yintercept = c(1, 32, 62))+
labs(title = "Standardized Spring Temperature Anomalies in Watertown Airport, NY")
# raw anomalies
ggplot(data = stn12all, mapping = aes(x = Year, y = DayID, fill = AnRaw)) +
geom_tile() +
theme_classic() +
scale_y_continuous("Month", breaks = c(1, 32, 62), labels = c("March", "April", "May")) +
scale_fill_gradient2(name = "Temperature Anomaly",
low = "#4575b4",
mid = "#ffffbf",
high = "#d73027",
na.value = "white") +
geom_hline(yintercept = c(1, 32, 62))+
labs(title = "Spring Temperature Anomalies in Watertown Airport, NY")
